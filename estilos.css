* {
    box-sizing: border-box;
}

body {
    background-color: #edf2f4;
    margin: 0;
    padding: 0;
}

/*Aca va clase Hover*/
.Boton1 {
    text-decoration: none;
    color: #33ff00;
    padding: 10px;
    font-size: 30px;
    display: flex;
    justify-content: center;
}

.Boton1:hover {
    text-decoration: none;
    color: #000000;
    background-color: #33ff00;
    padding: 10px;
    font-size: 30px;
    display: flex;
    justify-content: center;
}

/*Aca va clase Active*/
.Boton2 {
    text-decoration: none;
    color: black;
    padding: 10px;
    font-size: 30px;
    display: flex;
    justify-content: center;
}

.Boton2:active {
    text-decoration: none;
    color: #ff0000;
    padding: 10px;
    font-size: 30px;
    display: flex;
    justify-content: center;
}

/*Aca va clase Checked*/
.Boton3 {
    text-decoration: none;
    margin-left: 25px;
    padding: 10px;
    font-size: 30px;
    display: flex;
    justify-content: center;
  }

  div,
select {
  margin: 8px;
}

/* Etiquetas para entradas marcadas */
input:checked + label {
  color: red;
}

/* Elemento Radio, cuando está marcado */
input[type="radio"]:checked {
  box-shadow: 0 0 0 3px orange;
}

/* Elemento Checkbox, cuando está marcado */
input[type="checkbox"]:checked {
  box-shadow: 0 0 0 3px hotpink;
}

/* Elementos Option, cuando se seleccionan */
option:checked {
  box-shadow: 0 0 0 3px lime;
  color: red;
}
  


 /*Aca va clase display*/
.Boton4 {
    margin-left: 25px;
    padding: 10px;
    font-size: 30px;
    display: flex;
    justify-content: center;
}

input:default {
    box-shadow: 0 0 1px 2px coral;
  }
  
  input:default + label {
    color: coral;
  }

  /*Aca va clase dir()*/
.Boton5 {
    margin-left: 25px;
    padding: 10px;
    font-size: 30px;
    display: flex;
    justify-content: center;
}

:dir(ltr) {
    background-color: #ffffff;
  }
  
  :dir(rtl) {
    background-color: powderblue;
  }

 /*Aca va clase disabled*/
.Boton6 {
    margin-left: 25px;
    padding: 10px;
    font-size: 10px;
    display: flex;
    justify-content: center;
}

input[type="text"]:disabled {
    background: #ccc;
  }

 /*Aca va clase empty*/
 .Boton7 {
    margin-left: 25px;
    padding: 10px;
    font-size: 10px;
    display: flex;
    justify-content: center;
}

.box {
    background: pink;
    height: 80px;
    width: 80px;
  }
  
  .box:empty {
    background: lime;
  }

/*Aca va clase enabled*/
.Boton8 {
    margin-left: 25px;
    padding: 10px;
    font-size: 15px;
    display: flex;
    justify-content: center;
}

input:enabled {
    color: #2b2;
  }
  
  input:disabled {
    color: #aaa;
  }

/*Aca va clase first*/
.Boton9 {
    display: flex;
    justify-content: center;
    padding: 10px;
    font-size: 18px;
}

@page :first {
    margin-left: 50%;
    margin-top: 50%;
  }
  
  p {
    page-break-after: always;
  }

/*Aca va clase enabled*/
.Boton10 {
    margin-left: 25px;
    padding: 10px;
    font-size: 10px;
    display: flex;
    justify-content: center;
}

p:first-child {
    color: lime;
    background-color: black;
    padding: 5px;
  }

  p:first-of-type {
    color: red;
    font-style: italic;
  }  

  .red-input:focus {
    background: yellow;
    color: red;
  }
  
  .blue-input:focus {
    background: yellow;
    color: blue;
  }  

  input,
button {
  margin: 10px;
}

.focus-only:focus {
  outline: 2px solid black;
}

.focus-visible-only:focus-visible {
  outline: 4px dashed darkorange;
}

form {
  border: 1px solid;
  color: gray;
  padding: 4px;
}

form:focus-within {
  background: #ff8;
  color: black;
}

input {
  margin: 4px;
}

#fullscreen:fullscreen {
  padding: 42px;
  background-color: pink;
  border: 2px solid #f00;
  font-size: 200%;
}

#fullscreen:fullscreen > h1 {
  color: red;
}

#fullscreen:fullscreen > p {
  color: darkred;
}

#fullscreen:fullscreen > button {
  display: none;
}

:future(p, span) {
  display: none;
}

h1,
h2 {
  margin: 0 0 1rem 0;
}

h1:has(+ h2) {
  margin: 0 0 0.25rem 0;
}

const style = document.createElement("style");
const span = document.createElement("span");
span.textContent = this.textContent;

const shadowRoot = this.attachShadow({ mode: "open" });
shadowRoot.appendChild(style);
shadowRoot.appendChild(span);

style.textContent =
  "span:hover { text-decoration: underline; }" +
  ":host-context(h1) { font-style: italic; }" +
  ':host-context(h1):after { content: " - no links in headers!" }' +
  ":host-context(article, aside) { color: gray; }" 
  ":host(.footer) { color : red; }" +
  ":host { background: rgb(0 0 0 / 10%); padding: 2px 5px; }";

  const style = document.createElement("style");
const span = document.createElement("span");
span.textContent = this.textContent;

const shadowRoot = this.attachShadow({ mode: "open" });
shadowRoot.appendChild(style);
shadowRoot.appendChild(span);

style.textContent =
  "span:hover { text-decoration: underline; }" +
  ":host-context(h1) { font-style: italic; }" +
  ':host-context(h1):after { content: " - no links in headers!" }' +
  ":host(.footer) { color : red; }" +
  ":host { background: rgb(0 0 0 / 10%); padding: 2px 5px; }";
